#!/bin/bash

CONTAINER_NAME="autobrowser-container"
IMAGE_NAME="autobrowser"

# Get the base directory, which is the project's root
base_dir=$(dirname $(realpath "$0"))

CONFIG_PATH="$base_dir/config.ini"

echo "run-service: base_dir = $base_dir"
echo "run-service: CONFIG_PATH = $CONFIG_PATH"

# Check the mode in the config file
MODE=$(awk -F "=" '/^MODE/ {print $2}' $CONFIG_PATH)

if [ "$(docker ps -q -f name=$CONTAINER_NAME)" ]; then
    echo "Container is already running."
else
    rm -f $base_dir/token.txt
    touch $base_dir/token.txt
    if [ "$(docker ps -aq -f status=exited -f status=created -f name=$CONTAINER_NAME)" ]; then
        # Start the existing container
        docker start $CONTAINER_NAME
    else
        # Run a new container
        if [ "$MODE" = "DEV" ]; then
            rm -f $base_dir/flask-log.txt
            touch $base_dir/flask-log.txt
            docker run --name $CONTAINER_NAME -v $CONFIG_PATH:/app/config.ini:ro -v $base_dir/token.txt:/app/token.txt -v $base_dir/flask-log.txt:/app/flask-log.txt -v $base_dir/flask-cmd.log:/app/flask-cmd.txt -p 443:443 -p 5900:5900 $IMAGE_NAME
        else
            docker run --name $CONTAINER_NAME -v $CONFIG_PATH:/app/config.ini:ro -v $base_dir/token.txt:/app/token.txt -v $base_dir/flask-cmd.log:/app/flask-cmd.txt -p 443:443 -p 5900:5900 $IMAGE_NAME
        fi
    fi
fi
